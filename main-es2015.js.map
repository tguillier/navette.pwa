{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h3>Basic BarcodeReader API Sample</h3>\\n<input type=\\\"button\\\" value=\\\"Open Reader\\\" id=\\\"openButton\\\" (click)=\\\"openButtonClicked()\\\">\\n<input type=\\\"button\\\" value=\\\"Close Reader\\\" id=\\\"closeButton\\\" (click)=\\\"closeButtonClicked()\\\" disabled>\\n<br>\\n<div>\\n  <b>Barcode Data Read</b><br>\\n  <label for=\\\"BarcodeData\\\">Data:</label><input type=\\\"text\\\" id=\\\"BarcodeData\\\" size=20 /><br>\\n  <label for=\\\"SymbType\\\">Symbology:</label><input type=\\\"text\\\" id=\\\"SymbType\\\" size=16 /><br>\\n  <label for=\\\"ReadTime\\\">Time:</label><input type=\\\"text\\\" id=\\\"ReadTime\\\" size=24 /><br>\\n</div>\\n<br>\\n<div id=\\\"logMsg\\\">\\n  <b>Log:</b>\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"input[type=button] {\\n  /* top right bottom left */\\n  margin: 5px 25px 15px 0px;\\n}\\n\\ninput[type=text] {\\n  margin: 5px 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFx0Z3VpbGxpZVxcc291cmNlXFxyZXBvc1xcbmF2ZXR0ZS5wd2Evc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMEJBQUE7RUFDQSx5QkFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0W3R5cGU9XCJidXR0b25cIl0ge1xyXG4gIC8qIHRvcCByaWdodCBib3R0b20gbGVmdCAqL1xyXG4gIG1hcmdpbjogNXB4IDI1cHggMTVweCAwcHg7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcclxuICBtYXJnaW46IDVweCAxMHB4O1xyXG59XHJcbiIsImlucHV0W3R5cGU9YnV0dG9uXSB7XG4gIC8qIHRvcCByaWdodCBib3R0b20gbGVmdCAqL1xuICBtYXJnaW46IDVweCAyNXB4IDE1cHggMHB4O1xufVxuXG5pbnB1dFt0eXBlPXRleHRdIHtcbiAgbWFyZ2luOiA1cHggMTBweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\ndeclare var BarcodeReader: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  defaultReader;\n  readerAutoClosed = false;\n\n  logMsgElement;\n  openButton;\n  closeButton;\n\n  barcodeDataText;\n  symbTypeText;\n  readTimeText;\n\n  hidden;\n  visibilityChange;\n\n  constructor() {\n    // Use the component constructor to inject providers.\n  }\n\n  ngOnInit(): void {\n    this.setup();\n  }\n\n  setup() {\n    this.openButton = document.getElementById(\"openButton\");\n    this.closeButton = document.getElementById(\"closeButton\");\n    this.logMsgElement = document.getElementById(\"logMsg\");\n    this.barcodeDataText = document.getElementById(\"BarcodeData\");\n    this.symbTypeText = document.getElementById(\"SymbType\");\n    this.readTimeText = document.getElementById(\"ReadTime\");\n\n    // Check whether the browser supports detection of the web page visibility.\n    if (typeof document.hidden !== \"undefined\") { // Standard HTML5 attribute\n      this.hidden = \"hidden\";\n      this.visibilityChange = \"visibilitychange\";\n    }\n\n    if (this.hidden && typeof document.addEventListener !== \"undefined\" &&\n      typeof document[this.hidden] !== \"undefined\") {\n      // Add an event listener for the visibility change of the web page.\n      document.addEventListener(this.visibilityChange, this.handleVisibilityChange, false);\n    }\n  }\n\n  // After BarcodeReader object is created we can configure our symbologies and add our event listener\n  onBarcodeReaderComplete(result) {\n    console.log(result);\n    if (result.status === 0) {\n      // BarcodeReader object was successfully created\n      this.logMsgElement.innerHTML = \"<b>Log:</b><br>BarcodeReader object successfully created\";\n      this.updateUI(true, true);\n\n      // Configure the symbologies needed. Buffer the settings and commit them at once.\n      this.defaultReader.setBuffered(\"Symbology\", \"Code39\", \"Enable\", \"true\", this.onSetBufferedComplete);\n      this.defaultReader.setBuffered(\"Symbology\", \"Code128\", \"EnableCode128\", \"true\", this.onSetBufferedComplete);\n      this.defaultReader.commitBuffer(this.onCommitComplete);\n\n      // Add an event handler for the barcodedataready event\n      this.defaultReader.addEventListener(\"barcodedataready\", this.onBarcodeDataReady, false);\n      // Add an event handler for the window's beforeunload event\n      window.addEventListener(\"beforeunload\", this.onBeforeUnload);\n    }\n    else {\n      this.defaultReader = null;\n      this.logMsgElement.innerHTML += \"<p style=\\\"color:red\\\">Failed to create BarcodeReader, status: \" + result.status + \", message: \" + result.message + \"</p>\";\n\n      alert('Failed to create BarcodeReader, ' + result.message);\n    }\n  }\n\n  // Verify the symbology configuration\n  onSetBufferedComplete(result) {\n    if (result.status !== 0) {\n      this.logMsgElement.innerHTML += \"<p style=\\\"color:red\\\">setBuffered failed, status: \" + result.status + \", message: \" + result.message + \"</p>\";\n      this.logMsgElement.innerHTML += \"<p>Family=\" + result.family + \" Key=\" + result.key + \" Option=\" + result.option + \"</p>\";\n    }\n  }\n\n  onCommitComplete(resultArray) {\n    if (resultArray.length > 0) {\n      for (var i = 0; i < resultArray.length; i++) {\n        var result = resultArray[i];\n        if (result.status !== 0) {\n          this.logMsgElement.innerHTML += \"<p style=\\\"color:red\\\">commitBuffer failed, status: \" + result.status + \", message: \" + result.message + \"</p>\";\n          if (result.method === \"getBuffered\" || result.method === \"setBuffered\") {\n            this.logMsgElement.innerHTML += \"<p>Method=\" + result.method +\n              \" Family=\" + result.family + \" Key=\" + result.key +\n              \" Option=\" + result.option + \"</p>\";\n          }\n        }\n      } //endfor\n    }\n  }\n\n  // Handle barcode data when available\n  onBarcodeDataReady(data, type, time) {\n    this.barcodeDataText.value = data;\n    this.symbTypeText.value = type;\n    this.readTimeText.value = time;\n  }\n\n  updateUI(readerOpened, clearData) {\n    this.openButton.disabled = readerOpened;\n    this.closeButton.disabled = !readerOpened;\n    if (clearData) {\n      this.barcodeDataText.value = \"\";\n      this.symbTypeText.value = \"\";\n      this.readTimeText.value = \"\";\n    }\n  }\n\n  /**\n   * If the browser supports visibility change event, we can close the\n   * BarcodeReader object when the web page is hidden and create a new\n   * instance of the BarcodeReader object when the page is visible. This\n   * logic is used to re-claim the barcode reader in case another\n   * application has claimed it when this page becomes hidden.\n   */\n  handleVisibilityChange() {\n    if (document[this.hidden]) // The web page is hidden\n    {\n      this.closeBarcodeReader(true);\n    }\n    else // The web page is visible\n    {\n      if (this.readerAutoClosed) {\n        // Note: If you switch to another tab and quickly switch back\n        // to the current tab, the following call may have no effect\n        // because the BarcodeReader may not be completely closed yet.\n        // Once the BarcodeReader is closed, you may use the Open Reader\n        // button to create a new BarcodeReader object.\n        this.openBarcodeReader();\n      }\n    }\n  }\n\n  openBarcodeReader() {\n    if (!this.defaultReader) {\n      this.defaultReader = new BarcodeReader(null, result => this.onBarcodeReaderComplete(result));\n    }\n  }\n\n  closeBarcodeReader(isAutoClose) {\n    if (this.defaultReader) {\n      this.readerAutoClosed = isAutoClose;\n      this.defaultReader.close(result => {\n        if (result.status === 0) {\n          this.logMsgElement.innerHTML += \"<p style=\\\"color:blue\\\">BarcodeReader successfully closed.</p>\";\n          this.defaultReader = null;\n          this.updateUI(false, false);\n          window.removeEventListener(\"beforeunload\", this.onBeforeUnload);\n        }\n        else {\n          this.logMsgElement.innerHTML += \"<p style=\\\"color:red\\\">Failed to close BarcodeReader, status: \" + result.status + \", message: \" + result.message + \"</p>\";\n        }\n      });\n    }\n  }\n\n  openButtonClicked() {\n    this.openBarcodeReader();\n  }\n\n  closeButtonClicked() {\n    this.closeBarcodeReader(false);\n  }\n\n  onBeforeUnload(e) {\n    var message = \"Please close BarcodeReader before leaving this page.\";\n    (e || window.event).returnValue = message;\n    return message;\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}